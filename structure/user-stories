Интерфейс приложения

    Перейти на главную страницу (/).
    Проверить, есть ли у пользователя токен.
    Если у пользователя есть токен, проверить его на сервере.
    Если у пользователя есть токен и токен действителен, загрузить интерфейс приложения, в противном случае загрузить главную целевую страницу.

Регистрация

    Перейти на страницу регистрации (/регистрации).
    Ввести необходимые данные (имя пользователя, адрес электронной почты, пароль, настоящее имя, рабочее место и т.д.) в форму или воспользуйтесь популярным сервисом (Google, GitHub).
    Проверьте ввод на клиенте (поля проверки не пустые, проверьте электронную почту и пароль на соответствие) и на сервере (проверьте электронную почту и имя уникальны).
    Если вход прошел проверку, то сохранить его в базе данных, дать пользователю токен и перенаправьте пользователя на главную страницу, в противном случае отправить сообщение о том, что вход недействителен.

Войти на сайт .

    Перейти на страницу входа (/логин).
    Введите необходимые данные (имя пользователя или адрес электронной почты, пароль) в форму или войдите в систему через популярный сервис (Google, GitHub).
    Проверьте клиента, что все поля не пустые.
    Проверьте учетные данные на сервере.
    Если учетные данные действительны, дайте пользователю токен и перенаправьте его на главную страницу (с токеном будет загружен интерфейс приложения, иначе - главная целевая страница), иначе отправьте сообщение о том, что учетные данные недействительны.

Канал

    При отсутствии данных покажите держатель нагрузки.
    Получить из базы данных сообщения, связанные с пользователями и тегами, за которыми следует текущий пользователь и которые были размещены менее недели назад, заказать сообщения по просмотренным или не просмотренным (непросмотренные сообщения - это первые), объединить с сообщениями, предлагаемыми системой рекомендаций. Полученные данные по страницам.
    Загрузить одну страницу сообщений и показать ее пользователю.
    Если пользователь просмотрел более половины одной страницы сообщений, загрузите следующую страницу.
    Если сообщений нет, покажите соответствующее сообщение.

Поиск

    Введите поисковый запрос на вход.
    Нажмите кнопку "Поиск" или нажмите "Enter".
    Пока данных нет, покажите загрузочное устройство.
    Поиск в базе данных по сообщениям, помеченным поисковым запросом (если звездочками запроса отмечены "#") или по сообщениям и пользователям, связанным с поисковым запросом, по страницам результатов.
    Первая страница результатов поиска.
    Если пользователь просмотрел более половины одной страницы результата, загрузите следующую страницу.
    Если результата нет, покажите соответствующее сообщение.

Профиль пользователя

    Перейти на страницу пользователя (/)
    При отсутствии данных покажите держатель нагрузки.
    Получить из базы данных общедоступную информацию о пользователе.
    Отобразить публичную информацию о пользователе.
    При отсутствии данных показывать загрузку.
    Получить из базы данных сообщения, сделанные или разделенные текущим пользователем, разбить его на страницы.
    Отображать первую страницу сообщений.
    Если пользователь просмотрел более половины первой страницы сообщений, загрузите следующую страницу.
    Если сообщений нет, покажите соответствующее сообщение.

Настройки

    Перейдите на страницы настроек (/настройки).
    Измените или заполните поля формы.
    Проверьте правильность ввода на клиенте (проверьте некоторые поля регрессом во времени).
    Нажмите кнопку "Сохранить".
    Проверить ввод на сервере (проверить согласованность, уникальные ограничения).
    Если ввод корректен, сохранить его в базу данных, в противном случае - отправить соответствующее сообщение.

Подписаться

    Нажмите кнопку "Подписаться" рядом с меткой или каким-либо пользователем.
    Проверьте правильность отношений с сервером. (нельзя подписаться на себя или на другого пользователя дважды).
    Сохраните отношения к базе данных (много-много отношений между пользователями или тегами пользователей).
    Показать сообщение об успехе или ошибке.

API базы данных

    Построить запрос с помощью конструктора запросов.
    Передать строковое представление запроса и аргументов в Postgres API и выполнить вызов.
    Получить результаты или сообщение об ошибке.
    Поймать ошибку или обработать полученные данные.
    При необходимости ответить клиенту (если был выполнен вызов со стороны клиента).

Система рекомендаций

    Время от времени собирать данные об активности пользователей (комментарии, лайки, посты).
    Подготовить данные к загрузке.
    Загрузить полученные данные в хранилище данных (отдельная служба базы данных со структурой, подходящей для хранения таких данных).
    Обработать данные и принять решение о предпочтениях каждого конкретного пользователя, который был активен не более недели назад.
    Находить сообщения, соответствующие анализируемым предпочтениям.
    Установить связь между этими сообщениями и пользователями.
    Если от пользователя нет активности, выбирайте наиболее популярные сообщения за последний месяц.

Система отслеживания статистики

    Сбор данных о деятельности пользователей (комментарии, "лайки", сообщения) время от времени.
    Подготовка данных к загрузке.
    Загрузить полученные данные в хранилище данных (отдельная служба базы данных со структурой, подходящей для хранения таких данных).
    Обработать полученные данные и построить некоторую статистику в зависимости от нее.
    Хранить статистику
    Будьте готовы отображать статистику и строить некоторые динамические графики как можно быстрее.

Система закладок

    Нажмите кнопку "Сохранить" рядом с постом.
    Сохранить связь с базой данных (много-много связей между объектами пост-пользователь).
    Также можно удалить закладку или список закладок.
    При удалении закладки, затем удалите отношение из базы данных и его представление на стороне клиента, покажите соответствующее сообщение.
    Когда пользователь хочет увидеть список закладок, просто загрузите его из базы данных, выполняя два JOIN между пользователями и сущностями сообщений через таблицу users_posts и отобразите его.

Сообщение (создать, отредактировать)

    Нажмите на кнопку "Создать сообщение" (создать сообщение) или "Правка" (отредактировать существующее сообщение).
    Напишите MarkDown текст, вставьте изображения и файлы, вставьте фрагменты кода непосредственно в сообщение, так что построение структуры сообщения шаг за шагом с помощью PostUI компонента.
    Проверьте, не содержит ли пост клиента запрещенных символов во времени, проверьте файлы на наличие ограничений по размеру, создайте предварительный просмотр сообщения, который будет доступен в любой момент во время написания сообщения после нажатия кнопки "Предварительный просмотр".
    Нажмите кнопку "Пост" (для создания нового сообщения) или "Сохранить" (для сохранения изменений).
    Отправьте содержание сообщения и текущую идентифицирующую пользователя информацию (маркер) на сервер.
    Проверить содержимое сообщения на сервере. Если что-то не так, отправьте соответствующее сообщение, в противном случае перейдите к следующему шагу.
    Разобрать содержимое сообщения на сервере, отдельные файлы для сохранения, кодовые фрагменты, теги.
    Сохранить файлы из сообщения в файловую систему, вставить в MarkDown ссылки на эти файлы (путь в файловой системе).
    Разделить содержимое сообщения на ячейки. Каждая ячейка может иметь один из двух типов (MarkDown, код). В зависимости от этого построим JSON представление сообщения.
    Установите необходимую дополнительную информацию в ячейки кода (язык, версия, компилятор, интерпретатор и т.д.).
    Загрузить созданный JSON в базу данных в таблицу сообщений (или обновить существующий пост), сохранить запись первичного ключа.
    Загрузить теги разбора и другую дополнительную информацию в соответствующие таблицы БД.
    Создавать много-много связей между автором сообщения и постом с помощью соответствующих идентификационных значений (только если сообщение было создано).
    Создавать необходимые связи между текущей записью и другими записями, созданными из данных, разобранных из текущего содержимого записи (теги и т.д.).

Сообщение (удалить)

    Коснитесь кнопки "Удалить" рядом с сообщением.
    Отправьте в бэкэнд информацию, которая однозначно идентифицирует сообщение (Id).
    Удалить из базы данных текущую запись сообщения, а также выполнить каскадное удаление из всех таблиц, в зависимости от данного сообщения.
    Отправить сообщение об успешном завершении удаления, если оно было выполнено, а также сообщение об ошибке.
    Если удаление было выполнено, удалить отображение сообщения на стороне клиента.

Сообщение (поделиться)

    Нажмите кнопку "Поделиться" рядом с сообщением.
    Отправьте на сервер информацию, которая однозначно идентифицирует текущее сообщение (id) и пользователя (token).
    Проверьте, является ли совместное использование почты на сервере действительным (недействительным является совместное использование Вашей почты или совместное использование почты дважды).
    Если действие корректно, выстраивайте отношения между пользователем и совместно используемым сообщением (много-к-кому между пользователями), показывайте сообщение об успехе, в противном случае - сообщение об ошибке.

Пост

    Нажмите кнопку "Мне нравится" или "Не нравится" рядом с сообщением.
    Отправьте информацию, которая однозначно идентифицирует сообщение (id), пользователя (token) и реакцию пользователя (1 или -1).
    Проверьте, не отреагировали ли на сообщение текущие пользователи.
    Если реакция уже существует, проверьте, соответствует ли предыдущая реакция новой. Если реакции равны, то аннулируйте голос пользователя, иначе замените старую на новую.
    Если это первая реакция пользователя (или реакция после аннулирования), создайте много-много отношений между пользователем и реакцией, сохраните в ней базу данных.
    В зависимости от ответа сервера, отобразить представление реакции, обновить счетчик оценок после.




Комментарий (создать)

    Нажмите кнопку "Комментарий" рядом с сообщением или нажмите кнопку "Ответить" рядом с другим комментарием под сообщением.
    Введите содержание комментария (все то же самое, что и при создании сообщения).
    Нажмите на ячейки в сообщении (комментарии), чтобы сделать запрос на изменение некоторых строк, заменить или добавить нужный текст или код MarkDown.
    Нажмите кнопку "Комментарий".
    Отправьте на сервер информацию о текущем пользователе (маркер), сообщении (id), предыдущем комментарии (если существует, то id).
    Выполните проверку содержания комментария на сервере. Если что-то не так, отправьте соответствующее сообщение, в противном случае перейдите к следующему шагу.
    Разобрать содержимое комментариев на сервере, отдельные файлы для сохранения, фрагменты кода.
    Сохранить файлы из сообщения в файловую систему, вставить в MarkDown ссылки на эти файлы (путь в файловой системе).
    Разделить содержимое комментариев на ячейки. Каждая ячейка может иметь один из двух типов (MarkDown, код). В зависимости от этого построим JSON представление поста.
    Задайте ячейкам кода необходимую дополнительную информацию (язык, версия, компилятор, интерпретатор и т.д.).
    Загрузить созданный JSON в базу данных в таблицу комментариев (или обновить существующий пост), сохранить запись первичного ключа.
    Создать много-много связей между постом, предыдущим комментарием (если есть) и текущим комментарием.
    Создание связи между корневым постом (предыдущим комментарием), текущим комментарием и изменениями, предложенными данным комментарием.

Комментарий (обновить, удалить, отреагировать)

    Так же, как и пост.
